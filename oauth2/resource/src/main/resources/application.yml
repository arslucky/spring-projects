server:
  port: 0
spring:
  application:
    name: resource
  profiles:
    active:
    - dev
  kafka:
    bootstrap-servers: ${KAFKA_HOSTS:localhost:9091,localhost:9093,localhost:9094}
  cloud:
    config:
      name: oauth2
#      uri: http://${config.server.host}:${config.server.port} has to be set exactly as -Dspring.cloud.config.uri=<value> 
    bus:
      enabled: ${BUS_ENABLE:true}
    stream:
      kafka:
        binder:
          zkNodes: ${ZOO_HOST:localhost}
          defaultZkPort: ${ZOO_PORT:2182}
      bindings:
        springCloudBusOutput:
          content-type: application/json
          producer:
            header-mode: raw
          consumer:
            header-mode: raw
        springCloudBusInput:
          content-type: application/json
          producer:
            header-mode: raw
          consumer:
            header-mode: raw          
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8762}/eureka
    healthcheck:
      enabled: false 
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}
    instance-id: ${spring.application.name}:${random.int}
management:
  health:
    defaults:
      enabled: true                
#management:
  #endpoints:
#    web:
#      exposure:
#        include:
#        - health
#        - info
#        - shutdown
  #endpoint:
#    health:
#      show-details: always
#    shutdown:
#      enabled: true
security:
  user:
    password: none
  oauth2:
    resource:
      user-info-uri: http://${AUTH_HOST:localhost}:${AUTH_PORT:9000}/uaa/user
---
spring:
  profiles: dev
eureka:
  instance:
    lease-renewal-interval-in-seconds: ${EUREKA_LIVE_INTERVAL_SECONDS:2}
    lease-expiration-duration-in-seconds: ${EUREKA_EVICTION_PERIOD_SECONDS:4}