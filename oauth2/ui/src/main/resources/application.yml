server:
  port: ${port}
spring:
  application:
    name: ui
  kafka:
    bootstrap-servers:
      - ${kafka.host}:${kafka.port}
  cloud:
    config:
      name: oauth2
#      uri: http://${config.server.host}:${config.server.port} has to be set exactly as -Dspring.cloud.config.uri=<value>  
    bus:
      enabled: ${bus.enable:true}
    stream:
      kafka:
        binder:
          zkNodes: ${zoo.host}
          defaultZkPort: ${zoo.port}    
      bindings:
        springCloudBusOutput:
          content-type: application/json
          producer:
            header-mode: raw
          consumer:
            header-mode: raw
        springCloudBusInput:
          content-type: application/json
          producer:
            header-mode: raw
          consumer:
            header-mode: raw          
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${eureka.host}:${eureka.port}/eureka
    healthcheck:
      enabled: true
  instance:
    hostname: ${eureka.instance.hostname}
    instance-id: ${spring.application.name}:${random.int}
#    lease-renewal-interval-in-seconds: ${eureka.heartbeat.sending.interval:10}
management:
  health:
    defaults:
      enabled: true
security:
  sessions: stateless
  user:
    password: none
  basic:
    enabled: false
  oauth2:
    resource:
      user-info-uri: http://${auth.host}:${auth.port}/uaa/user