server:
  port: ${port}
spring:
  application:
    name: gateway-zuul
  kafka:
    bootstrap-servers:
      - ${kafka.host}:${kafka.port}
  cloud:
    config:
      name: oauth2
#      uri: http://${config.server.host}:${config.server.port} has to be set exactly as -Dspring.cloud.config.uri=<value> 
    bus:
      enabled: ${bus.enable:true}
    stream:
      kafka:
        binder:
          zkNodes: ${zoo.host}
          defaultZkPort: ${zoo.port}
      bindings:
        springCloudBusOutput:
          content-type: application/json
          producer:
            header-mode: raw
          consumer:
            header-mode: raw
        springCloudBusInput:
          content-type: application/json
          producer:
            header-mode: raw
          consumer:
            header-mode: raw      
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${eureka.host}:${eureka.port}/eureka
    healthcheck:
      enabled: true
  instance:
#    hostname: ${eureka_instance_hostname}
    instance-id: ${spring.application.name}:${server.port}
#    lease-renewal-interval-in-seconds: ${eureka.heartbeat.sending.interval:10}
#management:
#  endpoints:
#    web:
#      exposure:
#        include:
#        - health
#        - info
#  endpoint:
#    health:
#      show-details: always
#proxy:
#  auth:
#    routes:
#      ui: oauth2
#      webjars: passthru
zuul:
  routes:
    root:
      path: /
      service-id: ui
    webjars:
      path: /webjars/**
      service-id: ui
      strip-prefix: false
    ui:
      path: /ui/**
      service-id: ui
      sensitiveHeaders:
    resource:
      path: /resource/**
      service-id: resource
      sensitiveHeaders:
security:
#  sessions: stateless
  user:
    password: none
  basic:
    enabled: false
  oauth2:
    sso:
      login-path: /login
    resource:
      user-info-uri: http://${auth.host}:${auth.port}/uaa/user
      id: oauth2-resource
    client: 
      access-token-uri: http://${auth.host}:${auth.port}/uaa/oauth/token
      user-authorization-uri: http://${auth.host.authorization}:${auth.port}/uaa/oauth/authorize
      client-id: ui_client
      client-secret: password
      scope:
      - read
      - write
management:
  health:
    defaults:
      enabled: true