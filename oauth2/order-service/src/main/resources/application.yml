server:
  port: ${port}
spring:
  application:
    name: order-service
  profiles:
    active:
    - dev
  kafka:
    bootstrap-servers:
        - ${KAFKA_HOST}:${KAFKA_PORT}
  config:
    import: 
      - optional:configserver:http://${CONFIG_SERVER_HOST}:${CONFIG_SERVER_PORT} 
  cloud:
    config:
      name: oauth2  
    bus:
      enabled: ${BUS_ENABLE:true}
    stream:
      bindings:
        springCloudBusOutput:
          content-type: application/json
          producer:
            header-mode: none
          consumer:
            header-mode: none
        springCloudBusInput:
          content-type: application/json
          producer:
            header-mode: none
          consumer:
            header-mode: none
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_HOST}:${EUREKA_PORT}/eureka
    healthcheck:
      enabled: true
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}
    instance-id: ${spring.application.name}:${random.int}
management:
  endpoint:
    info:
      enabled: true      
    health:
      enabled: true
    refresh:
      enabled: true
    busenv:
      enabled: true
    busrefresh:
      enabled: true  
---
spring:
  config:
    activate:
      on-profile:
      - test
  data:
    mongodb:
      uri: mongodb://userTest:password@${MONGO_HOST}:${MONGO_PORT}/test
---
spring:
  config:
    activate:
      on-profile:
      - dev
  data:
    mongodb:
      uri: mongodb://${MONGO_USER}:${MONGO_USER_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB} 