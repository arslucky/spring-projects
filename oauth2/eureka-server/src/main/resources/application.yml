server:
  port: ${EUREKA_PORT}
spring:
  application:
    name: eureka-server
  profiles:
    active: dev
  kafka:
    bootstrap-servers: ${KAFKA_HOSTS}
    consumer:
      client-id: ${spring.application.name} 
  config:
    import: 
      - optional:configserver:http://${CONFIG_SERVER_HOST}:${CONFIG_SERVER_PORT} 
  cloud:
    config:
      name: oauth2
    bus:
      enabled: ${BUS_ENABLE:true}
    stream:
      bindings:
        springCloudBusOutput:
          content-type: application/json
          producer:
            header-mode: none
          consumer:
            header-mode: none
        springCloudBusInput:
          content-type: application/json
          producer:
            header-mode: none
          consumer:
            header-mode: none
eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://${EUREKA_HOST}:${EUREKA_PORT}/eureka/
management:
  endpoints:
    web:
      exposure:
        include:
        - health
        - info
  endpoint:
    health:
      show-details: always
---
spring:
  config:
    activate:
      on-profile:
      - dev
eureka:
  server:
    enable-self-preservation: false
    #expected-client-renewal-interval-seconds: ${EUREKA_LIVE_INTERVAL_SECONDS}
    eviction-interval-timer-in-ms: ${EUREKA_EVICTION_JOB_RUNNING_MS}
    response-cache-update-interval-ms: ${CACHE_UPDATE_INTERVAL_MS}