server:
  port: ${eureka.port}
spring:
  application:
    name: eureka-server
  kafka:
    bootstrap-servers:
      - ${kafka.host}:${kafka.port}
    consumer:
      client-id: ${spring.application.name} 
  config:
    import: 
      - optional:configserver:http://${config.server.host}:${config.server.port} 
  cloud:
    config:
      name: oauth2
    bus:
      enabled: ${bus.enable:true}
    stream:
      bindings:
        springCloudBusOutput:
          content-type: application/json
          producer:
            header-mode: none
          consumer:
            header-mode: none
        springCloudBusInput:
          content-type: application/json
          producer:
            header-mode: none
          consumer:
            header-mode: none
eureka:
#  instance:
#    hostname: ${eureka_instance_hostname}
#    lease-expiration-duration-in-seconds: ${eureka.heartbeat.waiting.interval:1}
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://${eureka.host}:${eureka.port}/eureka/
  server:
    enable-self-preservation: false
#    expected-client-renewal-interval-seconds: ${eureka.heartbeat.sending.interval:1}
#    eviction-interval-timer-in-ms: ${eureka.eviction.job.running.ms:5000}
#    renewal-percent-threshold: ${eureka.heartbeat.expected:0.49}
management:
  endpoints:
    web:
      exposure:
        include:
        - health
        - info
  endpoint:
    health:
      show-details: always    